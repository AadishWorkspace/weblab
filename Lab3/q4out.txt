address = input("Enter Address: ")
class Student:
def __init__(self, name, roll_no, department, address, gender, marks):
def display_student_details(student):
def get_student_details():
def main():
department = input("Enter Department: ")
display_student_details(student)
failed_students = [s.name for s in students if any(m < 10 for m in s.marks)]
for _ in range(num_students):
for student in students:
gender = input("Enter Gender: ")
if __name__ == "__main__":
main()
marks = [float(input(f"Enter marks for subject {i+1}: ")) for i in range(3)]
max_marks_student = max(students, key=lambda s: s.total_marks)
min_marks_student = min(students, key=lambda s: s.total_marks)
name = input("Enter Name: ")
num_students = int(input("Enter the number of students: "))
print("\nStudent Details:")
print()
print(f"Address: {student.address}")
print(f"Department: {student.department}")
print(f"Failed Students: {', '.join(failed_students) if failed_students else 'None'}")
print(f"Gender: {student.gender}")
print(f"Name: {student.name}")
print(f"Percentage: {student.percentage:.2f}%")
print(f"Roll No: {student.roll_no}")
print(f"Student with Minimum Marks: {min_marks_student.name}")
print(f"Total Marks: {student.total_marks}")
print(f"\nStudent with Maximum Marks: {max_marks_student.name}")
return Student(name, roll_no, department, address, gender, marks)
roll_no = input("Enter Roll No: ")
self.address = address
self.department = department
self.gender = gender
self.marks = marks
self.name = name
self.percentage = self.total_marks / len(marks)
self.roll_no = roll_no
self.total_marks = sum(marks)
students = get_student_details()